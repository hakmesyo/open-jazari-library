/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jazari.device.ic_camera;

import jazari.image_processing.ImageProcess;
import jazari.factory.FactoryUtils;
import jazari.gui.PanelPicture;
import java.awt.image.BufferedImage;

/**
 *
 * @author elcezerilab
 */
public class TestIC_CameraObserver extends javax.swing.JFrame implements IC_CameraInterface{
    private IC_CameraControlPanel cam_control_1;
    private IC_CameraControlPanel cam_control_2;
    private IC_CameraControlPanel cam_control_3;

    /**
     * Creates new form TestIC_CameraObserver
     */
    public TestIC_CameraObserver() {
        initComponents();
        cam_control_1=new IC_CameraControlPanel(this);
        cam_control_1.startCamera(0);
        cam_control_1.startLiveVideo();
        
        cam_control_2=new IC_CameraControlPanel(this);
        cam_control_2.startCamera(1);
        cam_control_2.startLiveVideo();
        
        cam_control_3=new IC_CameraControlPanel(this);
        cam_control_3.startCamera(2);
        cam_control_3.startLiveVideo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pan_1 = new jazari.gui.PanelPicture(this);
        pan_2 = new jazari.gui.PanelPicture(this);
        pan_3 = new jazari.gui.PanelPicture(this);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pan_1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pan_1.setPreferredSize(new java.awt.Dimension(320, 240));

        javax.swing.GroupLayout pan_1Layout = new javax.swing.GroupLayout(pan_1);
        pan_1.setLayout(pan_1Layout);
        pan_1Layout.setHorizontalGroup(
            pan_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );
        pan_1Layout.setVerticalGroup(
            pan_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pan_2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pan_2.setPreferredSize(new java.awt.Dimension(320, 240));

        javax.swing.GroupLayout pan_2Layout = new javax.swing.GroupLayout(pan_2);
        pan_2.setLayout(pan_2Layout);
        pan_2Layout.setHorizontalGroup(
            pan_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );
        pan_2Layout.setVerticalGroup(
            pan_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        pan_3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pan_3.setPreferredSize(new java.awt.Dimension(320, 240));

        javax.swing.GroupLayout pan_3Layout = new javax.swing.GroupLayout(pan_3);
        pan_3.setLayout(pan_3Layout);
        pan_3Layout.setHorizontalGroup(
            pan_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );
        pan_3Layout.setVerticalGroup(
            pan_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pan_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pan_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pan_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pan_2, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(pan_1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(pan_3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestIC_CameraObserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestIC_CameraObserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestIC_CameraObserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestIC_CameraObserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestIC_CameraObserver().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pan_1;
    private javax.swing.JPanel pan_2;
    private javax.swing.JPanel pan_3;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean isCameraStarted() {
        return true;
    }

    @Override
    public void sendSnapShot(BufferedImage img) {
    }

    @Override
    public void sendVideoLiveFrame(BufferedImage img, String device_name) {
    }

    @Override
    public void sendVideoLiveFrame(BufferedImage img, int device_index) {
        img=ImageProcess.resize(img, 320, 240);
        if (device_index==0) {
            ((PanelPicture)pan_1).setImage(img,"");
        }else if(device_index==1){
            ((PanelPicture)pan_2).setImage(img,"");
        }else if(device_index==2){
            ((PanelPicture)pan_3).setImage(img,"");
        }
    }

}
