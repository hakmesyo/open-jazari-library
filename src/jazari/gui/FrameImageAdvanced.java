/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jazari.gui;

import jazari.image_processing.ImageProcess;
import jazari.matrix.CMatrix;
import jazari.factory.FactoryUtils;
import jazari.vision.PicturePanelAdvanced;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Vector;
import javax.swing.JTextField;

/**
 *
 * @author BAP1
 */
public class FrameImageAdvanced extends javax.swing.JFrame {

    private BufferedImage img;
    int pw = 60;
    int ph = 130;
    BufferedImage currBufferedImage = null;
    private Vector<String> listImageFile = new Vector<String>();
    int listIndex = 0;

    /**
     * Creates new form FrameImage
     */
    public FrameImageAdvanced() {
        initComponents();
        getPicturePanel().setFrame(this);
        getPicturePanel().setJlist(image_list);
//        File file = ImageProcess.readImageFileFromFolder();
//        BufferedImage img = ImageProcess.readImageFromFile(file);
//        String imagePath = file.getAbsolutePath();
//        ((PicturePanel) PanelPicture).setImage(img, imagePath, this);
//        this.setSize(img.getWidth() + pw, img.getHeight() + ph);
    }

    public JTextField getFolderPath() {
        return this.txt_folderPath;
    }

    /**
     * Draws A Picture Frame
     *
     * @param img : image to be drawn
     * @param imagePath : Caption of the frame
     */
    public FrameImageAdvanced(BufferedImage img, String imagePath) {
        super(imagePath);
        initComponents();
        txt_folderPath.setText(imagePath);
        btn_loadImages.doClick();
        getPicturePanel().setImage(img, imagePath, this);
        this.setSize(img.getWidth() + pw, img.getHeight() + ph);
        getPicturePanel().setFrame(this);
        getPicturePanel().setJlist(image_list);
        
    }

    public FrameImageAdvanced(BufferedImage img) {
        super("Image");
        initComponents();
        getPicturePanel().setImage(img,this);
        this.setSize(img.getWidth() + pw, img.getHeight() + ph);
        getPicturePanel().setFrame(this);
        getPicturePanel().setJlist(image_list);
    }

    public FrameImageAdvanced(CMatrix cm) {
        super(cm.name);
        initComponents();
        BufferedImage img = ImageProcess.pixelsToImageGray(cm.toIntArray2D());
        getPicturePanel().setImage(img, "", this);
        this.setSize(img.getWidth() + pw, img.getHeight() + ph);
    }

    public FrameImageAdvanced(int[][] data) {
        initComponents();
        BufferedImage img = ImageProcess.pixelsToImageGray(data);
        getPicturePanel().setImage(img, "", this);
        this.setSize(img.getWidth() + pw, img.getHeight() + ph);
    }

    public FrameImageAdvanced(String filePath) {
        initComponents();
        img = ImageProcess.readImageFromFile(filePath);
        getPicturePanel().setImage(img, filePath, this);
        this.setSize(img.getWidth() + pw, img.getHeight() + ph);
        getPicturePanel().setFrame(this);
        getPicturePanel().setJlist(image_list);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelPicture = new PicturePanelAdvanced();
        jPanel2 = new javax.swing.JPanel();
        btn_dataGrid = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        txt_dpi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_folderPath = new javax.swing.JTextField();
        btn_browse = new javax.swing.JButton();
        btn_loadImages = new javax.swing.JButton();
        jScrollPane121 = new javax.swing.JScrollPane();
        image_list = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        PanelPicture.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout PanelPictureLayout = new javax.swing.GroupLayout(PanelPicture);
        PanelPicture.setLayout(PanelPictureLayout);
        PanelPictureLayout.setHorizontalGroup(
            PanelPictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelPictureLayout.setVerticalGroup(
            PanelPictureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_dataGrid.setText("Data Grid");
        btn_dataGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dataGridActionPerformed(evt);
            }
        });

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        txt_dpi.setText("300");

        jLabel2.setText("dpi");

        jLabel1.setText("Image Folder:");

        txt_folderPath.setText("C:\\Machine Vision Images\\BAP\\Test");

        btn_browse.setText("Browse");
        btn_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_browseActionPerformed(evt);
            }
        });

        btn_loadImages.setText("Load Images");
        btn_loadImages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loadImagesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btn_dataGrid)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_dpi, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_folderPath, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_browse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_loadImages, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(txt_folderPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btn_loadImages)
                .addComponent(btn_browse))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btn_dataGrid)
                .addComponent(btn_save)
                .addComponent(txt_dpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2))
        );

        jScrollPane121.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane121.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        image_list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                image_listValueChanged(evt);
            }
        });
        jScrollPane121.setViewportView(image_list);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane121, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane121, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                    .addComponent(PanelPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_dataGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dataGridActionPerformed
        CMatrix cm = CMatrix.getInstance(((PanelPicture) PanelPicture).getImage());
        new FrameDataGrid(cm).setVisible(true);
    }//GEN-LAST:event_btn_dataGridActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        savePanel();
    }//GEN-LAST:event_btn_saveActionPerformed
    private PicturePanelAdvanced getPicturePanel() {
        return ((PicturePanelAdvanced) PanelPicture);
    }

    private void image_listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_image_listValueChanged
        listIndex = image_list.getSelectedIndex();
        try {
            currBufferedImage = ImageProcess.readImageFromFile(txt_folderPath.getText() + "\\" + listImageFile.get(listIndex));
            getPicturePanel().setImage(currBufferedImage, txt_folderPath.getText() + "\\" + listImageFile.get(listIndex));
        } catch (Exception e) {
        }

    }//GEN-LAST:event_image_listValueChanged

    private void btn_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_browseActionPerformed
        File file = FactoryUtils.browseDirectory(txt_folderPath.getText());
        if (file != null) {
            txt_folderPath.setText(file.getPath());
        }
    }//GEN-LAST:event_btn_browseActionPerformed

    private void btn_loadImagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loadImagesActionPerformed
        File[] list = FactoryUtils.getFileListInFolder(txt_folderPath.getText());
        listImageFile.clear();
        for (File f : list) {
            listImageFile.add(f.getName());
            //System.out.println(f.getName());
        }
        image_list.setListData(listImageFile);
        currBufferedImage = ImageProcess.readImageFromFile(txt_folderPath.getText() + "\\" + listImageFile.get(0));
        getPicturePanel().setImage(currBufferedImage, txt_folderPath.getText() + "\\" + listImageFile.get(0));
        getPicturePanel().setJlist(image_list);
        image_list.setSelectedIndex(0);
        image_list.ensureIndexIsVisible(image_list.getSelectedIndex());
    }//GEN-LAST:event_btn_loadImagesActionPerformed

    private void savePanel() {
        PanelPicture cp = ((PanelPicture) PanelPicture);
        FactoryUtils.savePanel(cp,txt_dpi.getText());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameImageAdvanced.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameImageAdvanced.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameImageAdvanced.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameImageAdvanced.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameImageAdvanced().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelPicture;
    private javax.swing.JButton btn_browse;
    private javax.swing.JButton btn_dataGrid;
    private javax.swing.JButton btn_loadImages;
    private javax.swing.JButton btn_save;
    private javax.swing.JList image_list;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane121;
    private javax.swing.JTextField txt_dpi;
    private javax.swing.JTextField txt_folderPath;
    // End of variables declaration//GEN-END:variables
}
